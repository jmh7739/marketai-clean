=== Vercel 배포 업데이트 반영 안될 때 해결 방법 ===

## 🚨 가장 흔한 원인들

### 1. 환경 변수 미설정
Vercel Dashboard → Settings → Environment Variables
다음 변수들이 모두 추가되어 있는지 확인:

NEXT_PUBLIC_FIREBASE_API_KEY
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
NEXT_PUBLIC_FIREBASE_PROJECT_ID
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
NEXT_PUBLIC_FIREBASE_APP_ID
NEXT_PUBLIC_SUPABASE_URL
NEXT_PUBLIC_SUPABASE_ANON_KEY
SUPABASE_SERVICE_ROLE_KEY

### 2. 빌드 에러 확인
Vercel Dashboard → Deployments → 최신 배포 클릭 → Build Logs 확인

### 3. 브랜치 확인
Vercel Dashboard → Settings → Git → Production Branch가 "main"인지 확인

### 4. 강제 재배포
Vercel Dashboard → Deployments → 최신 배포 → "..." → "Redeploy"

### 5. 캐시 클리어
브라우저에서 Ctrl+Shift+R (하드 리프레시)

## 🔧 단계별 해결 방법

### Step 1: 환경 변수 추가
1. Vercel Dashboard 접속
2. 프로젝트 선택
3. Settings → Environment Variables
4. 위의 모든 변수들 추가
5. "Save" 클릭

### Step 2: 재배포
1. Deployments 탭
2. "Redeploy" 버튼 클릭
3. "Use existing Build Cache" 체크 해제
4. "Redeploy" 확인

### Step 3: 빌드 로그 확인
배포 중 에러가 있는지 확인:
- Module not found 에러
- Environment variable 에러
- TypeScript 에러

### Step 4: 로컬에서 빌드 테스트
npm run build
로컬에서 빌드가 성공하는지 확인

## 🚨 자주 발생하는 문제들

### 문제 1: @supabase/supabase-js 모듈 없음
해결: npm install @supabase/supabase-js

### 문제 2: 환경 변수 없음
해결: Vercel에 환경 변수 추가 후 재배포

### 문제 3: TypeScript 에러
해결: npm run build로 로컬 확인 후 수정

### 문제 4: 캐시 문제
해결: 재배포 시 "Use existing Build Cache" 체크 해제

## ✅ 성공 확인 방법
1. Vercel 배포 상태가 "Ready" 표시
2. 사이트 접속 시 새로운 변경사항 반영
3. 브라우저 개발자 도구에서 에러 없음
